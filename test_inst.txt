python federated_main.py --model=cnn --dataset=mnist --gpu=1 --iid=1 --epochs=5 --local_ep=5 --local_bs=128 --frac=0.1 --num_users=50 --unequal=1
python federated_main.py --model=cnn --dataset=mnist --gpu=0 --iid=1 --epochs=1 --local_ep=1 --local_bs=50 --frac=0.1 --num_users=10 --verbose=0
python federated_main.py --model=cnn --dataset=mnist --gpu=1 --iid=1 --epochs=10

python federated_main.py --load=1

python test.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=0 --iid=1 --local_ep=1 --local_bs=50 --frac=0.1 --num_users=100 --verbose=0 --lr=0.215

****  0.99 ****
#python test_0817.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=1 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.215 --lam=2.0 --num_clusters=1
python test.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=1 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.215
35(round)
python test_0817_dist.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=1 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.215 --lam=0.5 --num_clusters=3
35(round)
python test_0817_fixm.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=1 --local_ep=5 --local_bs=50 --frac=1.0 --epochs=100 --num_users=30 --verbose=0 --lr=0.215 --lam=0.5 --num_clusters=3
7(round)

python test_0817.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.05 --lam=0.5 --num_clusters=3
16(0.02)
python test_0817.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --one=1 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.05 --lam=0.5 --num_clusters=3
119(0.02)
python test_0817.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --unequal=1 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.05 --lam=1.0 --num_clusters=3
9(0.02)

python test.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=1 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.215
13(round)(35)
python test.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.1
460(round)
python test.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.05
56(round)(121)
python test.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --one=1 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.1
735(round)(526)
python test.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --one=1 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.05
782(round)
python test.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --unequal=1 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.1
7(round)(30)

python test.py --test_acc=0.99 --model=cnn --dataset=cifar --gpu=1 --iid=1 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.215
(round)
python test.py --test_acc=0.99 --model=cnn --dataset=cifar --gpu=1 --iid=0 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.05
(round)
python test.py --test_acc=0.99 --model=cnn --dataset=cifar --gpu=1 --iid=0 --one=1 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.05
(round)
python test.py --test_acc=0.99 --model=cnn --dataset=cifar --gpu=1 --iid=0 --unequal=1 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.1
(round)

python centralized.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=1 --local_ep=5 --local_bs=50 --num_users=30 --lr=0.215
98.71%
python centralized.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --local_ep=5 --local_bs=50 --num_users=30 --lr=0.1
99.02%
python centralized.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --one=1 --local_ep=5 --local_bs=50 --num_users=30 --lr=0.05
99.35%
python centralized.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --unequal=1 --local_ep=5 --local_bs=50 --num_users=30 --lr=0.1
98.98%

python centralized.py --test_acc=0.99 --model=cnn --dataset=cifar --gpu=1 --iid=1 --local_ep=5 --local_bs=8 --num_users=30 --lr=0.01
65.18%
python centralized.py --test_acc=0.99 --model=cnn --dataset=cifar --gpu=1 --iid=0 --local_ep=5 --local_bs=8 --num_users=30 --lr=0.01
64.82%
python centralized.py --test_acc=0.99 --model=cnn --dataset=cifar --gpu=1 --iid=0 --one=1 --local_ep=5 --local_bs=8 --num_users=30 --lr=0.01
64.88%
python centralized.py --test_acc=0.99 --model=cnn --dataset=cifar --gpu=1 --iid=0 --unequal=1 --local_ep=5 --local_bs=8 --num_users=30 --lr=0.01
65.46%

fedavg
python test_fixm.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=1 --local_ep=5 --local_bs=50 --frac=1.0 --epochs=60 --num_users=30 --verbose=0 --lr=0.1 --add=1 --add_ep=15
8(no epoch5)(round)10
python test_fixm.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --local_ep=5 --local_bs=50 --frac=1.0 --epochs=60 --num_users=30 --verbose=0 --lr=0.05 --add=1 --add_ep=15
90(no epoch5)(round)38
python test_fixm.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --one=1 --local_ep=5 --local_bs=50 --frac=1.0 --epochs=60 --num_users=30 --verbose=0 --lr=0.05 --add=1 --add_ep=15
857(no epoch5)(round)48
python test_fixm.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --unequal=1 --local_ep=5 --local_bs=50 --frac=1.0 --epochs=60 --num_users=30 --verbose=0 --lr=0.05 --add=1 --add_ep=15
12(no epoch5)(round)11

python test_fixm.py --test_acc=0.7 --model=cnn --dataset=cifar --gpu=1 --iid=1 --local_ep=5 --local_bs=8 --frac=1.0 --epochs=60 --num_users=30 --verbose=0 --lr=0.01 --add=1 --add_ep=15
16(round)37(without conv_drop)
python test_fixm.py --test_acc=0.7 --model=cnn --dataset=cifar --gpu=1 --iid=0 --local_ep=5 --local_bs=8 --frac=1.0 --epochs=60 --num_users=30 --verbose=0 --lr=0.01 --add=1 --add_ep=15
46(round)90(without conv_drop)
python test_fixm.py --test_acc=0.7 --model=cnn --dataset=cifar --gpu=1 --iid=0 --one=1 --local_ep=5 --local_bs=8 --frac=1.0 --epochs=60 --num_users=30 --verbose=0 --lr=0.01 --add=1 --add_ep=20
46(round)65(without conv_drop)
python test_fixm.py --test_acc=0.7 --model=cnn --dataset=cifar --gpu=1 --iid=0 --unequal=1 --local_ep=5 --local_bs=8 --frac=1.0 --epochs=60 --num_users=30 --verbose=0 --lr=0.01 --add=1 --add_ep=15
12(round)37(without conv_drop)

fedsem
python test_0820_fixm.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=1 --local_ep=5 --local_bs=50 --frac=1.0 --epochs=60 --num_users=30 --verbose=0 --lr=0.1 --lam=2.0 --algo=fedsem --num_clusters=3 --add=1 --add_ep=15
8(round)(c=10)
python test_0820_fixm.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --local_ep=5 --local_bs=50 --frac=1.0 --epochs=60 --num_users=30 --verbose=0 --lr=0.05 --lam=1.0 --algo=fedsem --num_clusters=3 --add=1 --add_ep=15
37(round)(c=10)
python test_0820_fixm.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --one=1 --local_ep=5 --local_bs=50 --frac=1.0 --epochs=60 --num_users=30 --verbose=0 --lr=0.05 --lam=1.0 --algo=fedsem --num_clusters=3 --add=1 --add_ep=15
45(round)48(c=10)
python test_0820_fixm.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --unequal=1 --local_ep=5 --local_bs=50 --frac=1.0 --epochs=60 --num_users=30 --verbose=0 --lr=0.05 --lam=2.0 --algo=fedsem --num_clusters=3 --add=1 --add_ep=15
10(round)(c=10)

python test_0820_fixm.py --test_acc=0.7 --model=cnn --dataset=cifar --gpu=1 --iid=1 --local_ep=5 --local_bs=8 --frac=1.0 --epochs=60 --num_users=30 --verbose=0 --lr=0.01 --lam=2.0 --algo=fedsem --num_clusters=3 --add=1 --add_ep=15
15(round)(c=10)
python test_0820_fixm.py --test_acc=0.7 --model=cnn --dataset=cifar --gpu=1 --iid=0 --local_ep=5 --local_bs=8 --frac=1.0 --epochs=60 --num_users=30 --verbose=0 --lr=0.01 --lam=1.0 --algo=fedsem --num_clusters=3 --add=1 --add_ep=15
37(round)(c=10)
python test_0820_fixm.py --test_acc=0.7 --model=cnn --dataset=cifar --gpu=1 --iid=0 --one=1 --local_ep=5 --local_bs=8 --frac=1.0 --epochs=60 --num_users=30 --verbose=0 --lr=0.01 --lam=1.0 --algo=fedsem --num_clusters=3 --add=1 --add_ep=20
45(round)(c=10)
python test_0820_fixm.py --test_acc=0.7 --model=cnn --dataset=cifar --gpu=1 --iid=0 --unequal=1 --local_ep=5 --local_bs=8 --frac=1.0 --epochs=60 --num_users=30 --verbose=0 --lr=0.01 --lam=2.0 --algo=fedsem --num_clusters=3 --add=1 --add_ep=15
11(round)(c=10)

fedsem_r
python test_0820_fixm.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=1 --local_ep=5 --local_bs=50 --frac=1.0 --epochs=60 --num_users=30 --verbose=0 --lr=0.1 --lam=2.0 --algo=fedsem_r --num_clusters=3 --add=1 --add_ep=15
9(round)11(c=10)
python test_0820_fixm.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --local_ep=5 --local_bs=50 --frac=1.0 --epochs=60 --num_users=30 --verbose=0 --lr=0.05 --lam=1.0 --algo=fedsem_r --num_clusters=3 --add=1 --add_ep=15
1(round)1(c=10)
python test_0820_fixm.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --one=1 --local_ep=5 --local_bs=50 --frac=1.0 --epochs=60 --num_users=30 --verbose=0 --lr=0.05 --lam=1.0 --algo=fedsem_r --num_clusters=3 --add=1 --add_ep=15
1(round)1(c=10)
python test_0820_fixm.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --unequal=1 --local_ep=5 --local_bs=50 --frac=1.0 --epochs=60 --num_users=30 --verbose=0 --lr=0.05 --lam=2.0 --algo=fedsem_r --num_clusters=3 --add=1 --add_ep=15
8(round)13(c=10)

python test_0820_fixm.py --test_acc=0.7 --model=cnn --dataset=cifar --gpu=1 --iid=1 --local_ep=5 --local_bs=8 --frac=1.0 --epochs=60 --num_users=30 --verbose=0 --lr=0.01 --lam=2.0 --algo=fedsem_r --num_clusters=3 --add=1 --add_ep=15
16(round)(c=10)
python test_0820_fixm.py --test_acc=0.7 --model=cnn --dataset=cifar --gpu=1 --iid=0 --local_ep=5 --local_bs=8 --frac=1.0 --epochs=60 --num_users=30 --verbose=0 --lr=0.01 --lam=1.0 --algo=fedsem_r --num_clusters=3 --add=1 --add_ep=15
1(round)(c=10)
python test_0820_fixm.py --test_acc=0.7 --model=cnn --dataset=cifar --gpu=1 --iid=0 --one=1 --local_ep=5 --local_bs=8 --frac=1.0 --epochs=60 --num_users=30 --verbose=0 --lr=0.01 --lam=1.0 --algo=fedsem_r --num_clusters=3 --add=1 --add_ep=20
1(round)(c=10)
python test_0820_fixm.py --test_acc=0.7 --model=cnn --dataset=cifar --gpu=1 --iid=0 --unequal=1 --local_ep=5 --local_bs=8 --frac=1.0 --epochs=60 --num_users=30 --verbose=0 --lr=0.01 --lam=2.0 --algo=fedsem_r --num_clusters=3 --add=1 --add_ep=15
14(round)(c=10)

feddbscan
python test_0820_fixm.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=1 --local_ep=5 --local_bs=50 --frac=1.0 --epochs=60 --num_users=30 --verbose=0 --lr=0.1 --lam=2.0 --algo=feddbscan --add=1 --add_ep=15
9(round)(org:8)
python test_0820_fixm.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --local_ep=5 --local_bs=50 --frac=1.0 --epochs=60 --num_users=30 --verbose=0 --lr=0.05 --lam=1.0 --algo=feddbscan --add=1 --add_ep=15
1(round)(org:1)
python test_0820_fixm.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --one=1 --local_ep=5 --local_bs=50 --frac=1.0 --epochs=60 --num_users=30 --verbose=0 --lr=0.05 --lam=1.0 --algo=feddbscan --add=1 --add_ep=15
1(round)(org:1)
python test_0820_fixm.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --unequal=1 --local_ep=5 --local_bs=50 --frac=1.0 --epochs=60 --num_users=30 --verbose=0 --lr=0.05 --lam=2.0 --algo=feddbscan --add=1 --add_ep=15
9(round)(org:20)

python test_0820_fixm.py --test_acc=0.7 --model=cnn --dataset=cifar --gpu=1 --iid=1 --local_ep=5 --local_bs=8 --frac=1.0 --epochs=60 --num_users=30 --verbose=0 --lr=0.01 --lam=2.0 --algo=feddbscan --add=1 --add_ep=15
15(round)(org:)
python test_0820_fixm.py --test_acc=0.7 --model=cnn --dataset=cifar --gpu=1 --iid=0 --local_ep=5 --local_bs=8 --frac=1.0 --epochs=60 --num_users=30 --verbose=0 --lr=0.01 --lam=1.0 --algo=feddbscan --add=1 --add_ep=15
1(round)(org:)
python test_0820_fixm.py --test_acc=0.7 --model=cnn --dataset=cifar --gpu=1 --iid=0 --one=1 --local_ep=5 --local_bs=8 --frac=1.0 --epochs=60 --num_users=30 --verbose=0 --lr=0.01 --lam=1.0 --algo=feddbscan --add=1 --add_ep=20
1(round)(org:)
python test_0820_fixm.py --test_acc=0.7 --model=cnn --dataset=cifar --gpu=1 --iid=0 --unequal=1 --local_ep=5 --local_bs=8 --frac=1.0 --epochs=60 --num_users=30 --verbose=0 --lr=0.01 --lam=2.0 --algo=feddbscan --add=1 --add_ep=15
14(round)(org:)

feddfs
python test_0820_fixm.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=1 --local_ep=5 --local_bs=50 --frac=1.0 --epochs=100 --num_users=30 --verbose=0 --lr=0.1 --lam=2.0 --algo=feddfs --add=1 --add_ep=5
7(round)
python test_0820_fixm.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --local_ep=5 --local_bs=50 --frac=1.0 --epochs=100 --num_users=30 --verbose=0 --lr=0.05 --lam=1.0 --algo=feddfs --add=1 --add_ep=5
1(round)
python test_0820_fixm.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --one=1 --local_ep=5 --local_bs=50 --frac=1.0 --epochs=100 --num_users=30 --verbose=0 --lr=0.05 --lam=1.0 --algo=feddfs --add=1 --add_ep=5
1(round)
python test_0820_fixm.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --unequal=1 --local_ep=5 --local_bs=50 --frac=1.0 --epochs=100 --num_users=30 --verbose=0 --lr=0.05 --lam=2.0 --algo=feddfs --add=1 --add_ep=5
9(round)na

python test_0820_fixm.py --test_acc=0.7 --model=cnn --dataset=cifar --gpu=1 --iid=1 --local_ep=5 --local_bs=8 --frac=1.0 --epochs=100 --num_users=30 --verbose=0 --lr=0.01 --lam=2.0 --algo=feddfs --add=1 --add_ep=5
15(round)
python test_0820_fixm.py --test_acc=0.7 --model=cnn --dataset=cifar --gpu=1 --iid=0 --local_ep=5 --local_bs=8 --frac=1.0 --epochs=100 --num_users=30 --verbose=0 --lr=0.01 --lam=1.0 --algo=feddfs --add=1 --add_ep=5
1(round)
python test_0820_fixm.py --test_acc=0.7 --model=cnn --dataset=cifar --gpu=1 --iid=0 --one=1 --local_ep=5 --local_bs=8 --frac=1.0 --epochs=100 --num_users=30 --verbose=0 --lr=0.01 --lam=1.0 --algo=feddfs --add=1 --add_ep=5
1(round)
python test_0820_fixm.py --test_acc=0.7 --model=cnn --dataset=cifar --gpu=1 --iid=0 --unequal=1 --local_ep=5 --local_bs=8 --frac=1.0 --epochs=100 --num_users=30 --verbose=0 --lr=0.01 --lam=2.0 --algo=feddfs --add=1 --add_ep=5
14(round)

**** non-iid 0.95 ****
python test.py --test_acc=0.95 --model=cnn --dataset=mnist --gpu=1 --iid=0 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.1 --lam=0.5 --km=s --num_clusters=0
python test.py --test_acc=0.95 --model=cnn --dataset=mnist --gpu=1 --iid=0 --unequal=1 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.1 --lam=0.5 --km=s --num_clusters=0
python test_0809.py --test_acc=0.95 --model=cnn --dataset=mnist --gpu=1 --iid=0 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.1 --lam=0.5 --km=s --num_clusters=3
python test_0809.py --test_acc=0.95 --model=cnn --dataset=mnist --gpu=1 --iid=0 --unequal=1 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.1 --lam=0.5 --km=s --num_clusters=3
**** select K
python test.py --test_acc=0.95 --model=cnn --dataset=mnist --gpu=1 --iid=1 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.215 --lam=0.5 --km=s --num_clusters=0
python test_0809.py --test_acc=0.95 --model=cnn --dataset=mnist --gpu=1 --iid=1 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.215 --lam=0.5 --km=s --num_clusters=1
python test_0809.py --test_acc=0.95 --model=cnn --dataset=mnist --gpu=1 --iid=1 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.215 --lam=0.5 --km=s --num_clusters=2
python test_0809.py --test_acc=0.95 --model=cnn --dataset=mnist --gpu=1 --iid=1 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.215 --lam=0.5 --km=s --num_clusters=3
python test_0809.py --test_acc=0.95 --model=cnn --dataset=mnist --gpu=1 --iid=1 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.215 --lam=0.5 --km=s --num_clusters=4
python test_0809.py --test_acc=0.95 --model=cnn --dataset=mnist --gpu=1 --iid=1 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.215 --lam=0.5 --km=s --num_clusters=5
python test_0809.py --test_acc=0.95 --model=cnn --dataset=mnist --gpu=1 --iid=1 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.215 --lam=0.5 --km=s --num_clusters=6
python test_0809.py --test_acc=0.95 --model=cnn --dataset=mnist --gpu=1 --iid=1 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.215 --lam=0.5 --km=s --num_clusters=7
python test_0809.py --test_acc=0.95 --model=cnn --dataset=mnist --gpu=1 --iid=1 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.215 --lam=0.5 --km=s --num_clusters=8
python test_0809.py --test_acc=0.95 --model=cnn --dataset=mnist --gpu=1 --iid=1 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.215 --lam=0.5 --km=s --num_clusters=9
python test_0809.py --test_acc=0.95 --model=cnn --dataset=mnist --gpu=1 --iid=1 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.215 --lam=0.5 --km=s --num_clusters=10
****

****
python test_0809.py --test_acc=0.9 --model=cnn --dataset=mnist --gpu=0 --iid=1 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.02 --k_vote=eq --num_clusters=3
python test_0809.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=1 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.215 --lam=0.5 --km=s --num_clusters=3
python test_0809.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=1 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.215 --lam=0.5 --km=s --num_clusters=3
python test_0809.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.02 --lam=0.5 --km=s --num_clusters=3
python test_0809.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --unequal=1 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.02 --lam=0.5 --km=s --num_clusters=3
#python test_0809.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.215 --lam=0.5 --km=s --num_clusters=3
#WARNING:root:NaN or Inf found in input tensor.
python test_0809.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=1 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.215 --lam=0.5 --num_clusters=3
python test_0809.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --local_ep=5 --local_bs=50 --frac=0.3 --num_users=100 --verbose=0 --lr=0.01 --k_vote=eq --num_clusters=3
****
python test_0809.py --test_acc=0.6 --model=cnn --dataset=mnist --gpu=0 --iid=1 --local_ep=1 --local_bs=20 --frac=0.1 --num_users=100 --num_clusters=2 --verbose=0 --k_vote=w
python test.py --test_acc=0.6 --model=cnn --dataset=mnist --gpu=0 --iid=1 --local_ep=1 --local_bs=20 --frac=0.2 --num_users=200 --num_clusters=4 --verbose=0 --k_vote=w
python test.py --test_acc=0.6 --model=cnn --dataset=fmnist --gpu=1 --iid=1 --local_ep=1 --local_bs=10 --frac=0.1 --num_users=10 --verbose=0
for win10/linux:
python federated_main.py --model=cnn --dataset=mnist --gpu=1 --iid=0 --epochs=10 --local_ep=5 --local_bs=50 --frac=0.1 --num_users=100 --unequal=1

python my_fed_main.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=1 --local_ep=1 --local_bs=inf --frac=0.1 --num_users=100 --verbose=0 --lr=0.215
python my_fed_main.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --local_ep=1 --local_bs=inf --frac=0.1 --num_users=100 --verbose=0 --lr=0.1

#python my_fed_main.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=1 --local_ep=5 --local_bs=inf --frac=0.1 --num_users=100 --verbose=0 --lr=0.215 #unable to converge
python my_fed_main.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=1 --local_ep=5 --local_bs=inf --frac=0.1 --num_users=100 --verbose=0 --lr=0.1
python my_fed_main.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --local_ep=5 --local_bs=inf --frac=0.1 --num_users=100 --verbose=0 --lr=0.1

python my_fed_main.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=1 --local_ep=1 --local_bs=50 --frac=0.1 --num_users=100 --verbose=0 --lr=0.215
python my_fed_main.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --local_ep=1 --local_bs=50 --frac=0.1 --num_users=100 --verbose=0 --lr=0.1

python my_fed_main.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=1 --local_ep=20 --local_bs=inf --frac=0.1 --num_users=100 --verbose=0 --lr=0.215
python my_fed_main.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --local_ep=20 --local_bs=inf --frac=0.1 --num_users=100 --verbose=0 --lr=0.02
#python my_fed_main.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --local_ep=20 --local_bs=inf --frac=0.1 --num_users=100 --verbose=0 --lr=0.1 #unable to converge

python my_fed_main.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=1 --local_ep=1 --local_bs=10 --frac=0.1 --num_users=100 --verbose=0 --lr=0.02
#python my_fed_main.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=1 --local_ep=1 --local_bs=10 --frac=0.1 --num_users=100 --verbose=0 --lr=0.215 #NaN or Inf
python my_fed_main.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --local_ep=1 --local_bs=10 --frac=0.1 --num_users=100 --verbose=0 --lr=0.02
#python my_fed_main.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --local_ep=1 --local_bs=10 --frac=0.1 --num_users=100 --verbose=0 --lr=0.1 #NaN or Inf

python my_fed_main.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=0 --iid=1 --local_ep=5 --local_bs=50 --frac=0.1 --num_users=100 --verbose=0 --lr=0.215
python my_fed_main.py --test_acc=0.99 --model=cnn --dataset=mnist --gpu=1 --iid=0 --local_ep=5 --local_bs=50 --frac=0.1 --num_users=100 --verbose=0 --lr=0.1

python plot_test.py

for mac:
python my_fed_main.py --model=cnn --dataset=mnist --gpu=0 --iid=0 --epochs=1 --local_ep=1 --local_bs=128 --frac=0.1 --num_users=50 --unequal=1

average_weights datatype: OrderedDict([('conv1.weight', tensor())])
from update.py LocalUpdate update_weights => model.state_dict()
製作一個OrderedDict()物件裡面包tensor()

global_weights = global_model.state_dict()

# send global model to client
w, loss = local_model.update_weights(
                    model=copy.deepcopy(global_model), global_round=epoch)
***[怎麼產生:update.py => LocalUpdate => update_weights]
model.state_dict()
上述須考量如何將tensor or array轉成OrderedDict()形式再以之分群
找到用向量表示FL模型參數的paper原始碼

local_weights.append(copy.deepcopy(w))
# local_weights 是多個client的local weight的list


# update global weights
global_weights = average_weights(local_weights)
[怎麼讀：utils.py => average_weights]
def average_weights(w): 
    w_avg = copy.deepcopy(w[0])
    for key in w_avg.keys():
        for i in range(1, len(w)):
            w_avg[key] += w[i][key]
        w_avg[key] = torch.div(w_avg[key], len(w))
    return w_avg


# update global weights
global_model.load_state_dict(global_weights)



print('| Global Round : {} | Local Epoch : {} | [{}/{} ({:.0f}%)]\tLoss: {:.6f}'.format(
                        global_round, iter, batch_idx * len(images),
                        len(self.trainloader.dataset),
                        100. * batch_idx / len(self.trainloader), loss.item()))